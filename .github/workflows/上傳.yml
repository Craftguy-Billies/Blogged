name: AI 自動筆 FTP Deployment

# Controls when the workflow will run
on:
  workflow_dispatch:  # This allows you to manually trigger the workflow

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Specify the Python version you need

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Assuming you have a requirements.txt file

      # Runs your Python script
      - name: Run Img Compressor script
        run: python compress.py

      - uses: stefanzweifel/git-auto-commit-action@v5
        id: auto-commit-action
        with:
            commit_message: Changed files
            branch: ${{ github.ref }}
            force: true

      # Setup FTP deployment
      - name: Setup FTP deployment
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        env:
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        with:
          server: ftpupload.net
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: /htdocs/
          exclude: |
            .git*
            **/.git*
            **/.github*
            自動筆.py
            "groq api keys"
            groqqer.py
            ig.py
            /index.html
            id.txt
            results.txt
            compress.py
          continue-on-error: true
          
      - name: Ping PubSubHubbub Hub
        run: |
          curl -d "hub.mode=publish&hub.url=https://www.avoir.me/rss.xml" https://pubsubhubbub.appspot.com/

      - name: Submit RSS Feed to Bing IndexNow API
        env:
          INDEXNOW_API_KEY: ${{ secrets.INDEXNOW_API_KEY }}
        run: |
          # Define the host and key location
          HOST="www.avoir.me"
          KEY_LOCATION="https://www.avoir.me/979cfc23fe1d43928332d551171798a6.txt"
          
          # Define the URL of the RSS feed to submit
          RSS_FEED_URL="https://www.avoir.me/rss.xml"

          # Bing IndexNow API Endpoint
          INDEXNOW_ENDPOINT="https://api.indexnow.org/IndexNow"

          # Create the payload JSON
          PAYLOAD=$(cat <<EOF
          {
              "host": "$HOST",
              "key": "$INDEXNOW_API_KEY",
              "keyLocation": "$KEY_LOCATION",
              "urlList": ["$RSS_FEED_URL"]
          }
          EOF
          )

          # Submit the POST request
          curl -X POST -H "Content-Type: application/json; charset=utf-8" \
            -d "$PAYLOAD" \
            "$INDEXNOW_ENDPOINT"
